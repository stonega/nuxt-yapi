/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/user/bot:login': {
    post: {
      parameters: {
        body: {
          root?: {
            data: string
            hash: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: string
            fail: boolean
          }
        }
      }
    }
  }
  '/user/user': {
    get: {
      parameters: {}
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              userID: string
              userAddress: string
              /** @description 用户来源 */
              userSource: string
              /** @description 用户邀请码 */
              userInvitationCode: string
              /** @description 用户上级地址 */
              userInvitationAddress: string
              /** @description 用户一级邀请数量 */
              inviterL1Count: string
              /** @description 用户二级邀请数量 */
              inviterL2Count: string
              /** @description 用户一二级昨日质押量 */
              inviterStakingAmount: string
              /** @description 用户自身质押量 */
              oneselfStakingAmount: string
              /** @description 用户是否达到返佣最小质押量 */
              computeTag: boolean
              /** @description 返佣已提现金额 */
              rebateWithdrawAmount: number
              /** @description 用户返佣提现数量 */
              rebateBalanceMap: {
                /** @description 一级返佣可提现余额 */
                INVITER_L1: string
                /** @description 二级返佣可提现余额 */
                INVITER_L2: string
              }
            }
            fail: boolean
          }
        }
      }
    }
  }
  '/user/check': {
    get: {
      parameters: {
        query: {
          address: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: boolean
            fail: boolean
          }
        }
      }
    }
  }
  '/user/user-level': {
    get: {
      parameters: {
        query: {
          /** type：0团队信息；type：1个人 */
          type: string
          /** 用户地址 */
          address: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code?: string
            msg?: string
            data?: {
              /** @description 质押数量 */
              stake?: number
              /** @description 等级 */
              level?: number
              /** @description 有效时间 */
              validity?: string
              /** @description 返佣 */
              rebate?: number
              /** @description 奖励系数 */
              bonus?: number
              /** @description 奖励数量 */
              reward?: number
              /** @description 升到下一级所需数量 */
              upgradeAmount?: number
            }
            fail?: boolean
          }
        }
      }
    }
  }
  '/user/user:login': {
    post: {
      parameters: {
        body: {
          root?: {
            address: string
            signature: string
            invitationCode?: string
            message: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: string
            fail: boolean
          }
        }
      }
    }
  }
  '/user/msg-to-login': {
    get: {
      parameters: {}
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: string
            fail: boolean
          }
        }
      }
    }
  }
  '/user/invitation-relations': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description 邀请记录名称 */
                invitationRelationName?: string
                /** @description 邀请记录ID */
                invitationRelationID?: number
                /** @description 邀请记录被邀请人地址 */
                invitationRelationInviteeAddress?: string
                /** @description 邀请记录邀请人地址 */
                invitationRelationInviterAddress?: string
                /** @description 邀请记录邀请等级 */
                invitationRelationInviterLevel?: string
                /** @description 邀请记录邀请时间 */
                invitationRelationInviterTime?: string
              }[]
            }
          }
        }
      }
    }
  }
  '/user/invitation-relation': {
    get: {
      parameters: {
        query: {
          /** 邀请记录ID */
          invitationRelationID: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 邀请记录名称 */
              invitationRelationName: string
              /** @description 邀请记录ID */
              invitationRelationID: number
              /** @description 邀请记录被邀请人地址 */
              invitationRelationInviteeAddress: string
              /** @description 邀请记录邀请人地址 */
              invitationRelationInviterAddress: string
              /** @description 邀请记录邀请等级 */
              invitationRelationInviterLevel: string
              /** @description 邀请记录邀请时间 */
              invitationRelationInviterTime: string
            }
          }
        }
      }
    }
  }
  '/bot/inviter-rebates': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
          /** 邀请类型。LEVEL_1、LEVEL_2 */
          type: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              items: {
                inviteeAddress: string
                totalRebateAmount: string
                username: string
                verify: boolean
              }[]
              pageNo: number
              pageSize: number
              totalPage: number
              totalCount: string
              hasPrev: boolean
              hasNext: boolean
            }
            fail: boolean
          }
        }
      }
    }
  }
  '/user/inviter-rebates': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
          /** 邀请类型。LEVEL_1、LEVEL_2 */
          type: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              items: {
                /** @description 下级地址 */
                inviteeAddress: string
                /** @description 下级返佣金额 */
                totalRebateAmount: number
              }[]
              pageNo: number
              pageSize: number
              totalPage: number
              totalCount: string
              hasPrev: boolean
              hasNext: boolean
            }
            fail: boolean
          }
        }
      }
    }
  }
  '/user/invite-stake-rebates': {
    get: {
      parameters: {
        query: {
          /** 用户地址 */
          address: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data?: {
              /** @description 一级邀请人数量 */
              levelOneCount?: number
              /** @description 一级邀请人总质押量 */
              levelOneStake?: number
              /** @description 二级邀请人数量 */
              levelTwoCount?: number
              /** @description 二级邀请人总质押量 */
              levelTwoStake?: number
              /** @description 返佣提现数量 */
              rebate?: number
            }
          }
        }
      }
    }
  }
  '/user/rebate-withdraw-records': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
          /** INVITER_L1、INVITER_L1 */
          type?: string
          /**
           * // 用户claim
           *     CLAIM,
           *     // 审核确认提取
           *     CONFIRMED,
           *     // 上链成功
           *     SUCCESS,
           *     // 上链失败
           *     ERROR
           */
          status?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description 返佣提现记录ID */
                rebateWithdrawRecordID?: number
                /** @description 返佣提现记录提现类型 */
                rebateWithdrawRecordWithdrawType?: string
                /** @description 返佣提现记录提现状态 */
                rebateWithdrawRecordWithdrawStatus?: string
                /** @description 返佣提现记录提现时间 */
                rebateWithdrawRecordWithdrawTime?: string
                /** @description 返佣提现记录提现地址 */
                rebateWithdrawRecordAddress?: string
                /** @description 返佣提现记录提现金额 */
                rebateWithdrawRecordWithdrawAmount?: string
              }[]
            }
          }
        }
      }
    }
  }
  '/user/rebate-withdraw-record': {
    get: {
      parameters: {
        query: {
          /** 返佣提现记录ID */
          rebateWithdrawRecordID: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 返佣提现记录ID */
              rebateWithdrawRecordID: number
              /** @description 返佣提现记录名称 */
              rebateWithdrawRecordName: string
              /** @description 返佣提现记录提现类型 */
              rebateWithdrawRecordWithdrawType: string
              /** @description 返佣提现记录提现状态 */
              rebateWithdrawRecordWithdrawStatus: string
              /** @description 返佣提现记录提现时间 */
              rebateWithdrawRecordWithdrawTime: string
              /** @description 返佣提现记录提现地址 */
              rebateWithdrawRecordAddress: string
              /** @description 返佣提现记录提现金额 */
              rebateWithdrawRecordWithdrawAmount: string
              /** @description 返佣提现记录备注信息，聚合记录返佣记录的id */
              rebateWithdrawRecordRemark: string
            }
          }
        }
      }
    }
  }
  '/user/rebate:withdraw': {
    post: {
      parameters: {
        body: {
          root?: {
            /** @description INVITER_L1: 1级邀请返佣分润,INVITER_L2: 2级邀请返佣分润 */
            withdrawType: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: { [key: string]: unknown }
            fail: boolean
          }
        }
      }
    }
  }
  '/blockchain/trade-history': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
          address?: string
          /**
           * 如果查用户的交易记录，可不传
           * 如果查全部交易记录，则为必传
           */
          pair: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description 交易记录time */
                price?: string
                qty: string
                tradeTime: string
                type: number
                orderId: string
                pair: string
                u: string
                /** @description 0 初始化 1完全成交 2部分成交 -1撤单 */
                status: number
                /** @description 手续费 */
                fee: number
              }[]
            }
          }
        }
      }
    }
  }
  '/blockchain/pairs': {
    get: {
      parameters: {}
      responses: {
        /** successful operation */
        200: {
          schema: {
            /** 代码 */
            code?: string
            /** 错误信息 */
            msg?: string
            /** 数据 */
            data?: {
              /** 币对名称 */
              name: string
              /** 交易合约地址 */
              address: string
              /** A币地址 */
              tokenAAddress: string
              /** A币位数 */
              tokenADecimal: string
              /** A币图标 */
              tokenAIcon: string
              /** B币地址 */
              tokenBAddress: string
              /** B币位数 */
              tokenBDecimal: string
              /** B币图标 */
              tokenBIcon: string
              /** 订单簿币价 */
              price: string
            }[]
            /** 是否失败 */
            fail?: boolean
          }
        }
      }
    }
  }
  '/blockchain/user-orders': {
    get: {
      parameters: {
        query: {
          /** 不填默认10 */
          address: string
          pageSize: string
          pageNo: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description 交易记录time */
                pair?: string
                qty: string
                price: number
                /** @description  0  sell bool 1  buy bool */
                type: number
                filledQty: number
                /** @description  0 active 1 success -1 cancel 2部分成交 */
                status: number
                time: string
                orderId: string
                /** @description 订单创建时的U数量 */
                originalU: number
                /** @description 成交时消耗的U */
                filledU: number
                /** @description 哈希 */
                txHash: string
                /** @description 手续费 */
                fee: number
              }[]
            }
          }
        }
      }
    }
  }
  '/blockchain/order-books': {
    get: {
      parameters: {
        query: {
          /** 不填默认10 */
          size?: string
          /** 必传 */
          pair: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              orderBuyBList: {
                price: string
                qty: string
                value: string
              }[]
              orderSellBList: {
                price: string
                qty: string
                value: string
              }[]
              latestPrice: string
            }
          }
        }
      }
    }
  }
  '/blockchain/check-order': {
    get: {
      parameters: {
        query: {
          /** 支持批量用“,”隔开 */
          hash: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code?: string
            msg?: string
            data?: {
              hash: string
              result: boolean
            }[]
            fail?: boolean
          }
        }
      }
    }
  }
  '/blockchain/trade-statistic': {
    get: {
      parameters: {
        query: {
          /** type {0:hour, 1:day, 2:month，3:minute, 4: 15minutes} */
          type: string
          /** 起始时间 */
          start: string
          /** 截止时间 */
          end: string
          /** 代币对 */
          pair: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data?: {
              tradeAmount: number
              highPrice: number
              lowPrice: number
              openPrice: number
              closePrice: number
              time: string
            }[]
          }
        }
      }
    }
  }
  '/blockchain/trade-history-detail': {
    get: {
      parameters: {
        query: {
          pageNo: string
          pageSize: string
          orderId: string
          type: string
          /** 币对 */
          pair: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data?: {
              hasPrev?: boolean
              pageNo?: number
              totalPage?: number
              pageSize?: number
              hasNext?: boolean
              totalCount?: number
              items?: {
                price: string
                qty: string
                tradeTime: string
                type: number
                pair: string
                u: number
                orderId: number
              }[]
            }
          }
        }
      }
    }
  }
  '/user/devices': {
    get: {
      parameters: {
        query: {
          pageNo?: string
          pageSize?: string
          /** 1：由高到低；0：由低到高 */
          voters?: string
          /** 1：由高到低；0：由低到高 */
          totalStake?: string
          /** 1：由高到低；0：由低到高 */
          yield?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data?: {
              hasPrev?: boolean
              pageNo?: number
              totalPage?: number
              pageSize?: number
              hasNext?: boolean
              totalCount?: number
              items: {
                deviceStateTimeOnChain: string
                deviceState: string
                deviceID: number
                deviceOwnerAddress: string
                deviceRegisterTimeOnChain: string
                deviceTotalStake: string
                deviceOwnerStake: string
                voterCount: number
                deviceMyStake: string
                lastHeartBeat: string
                perBill: string
                currentStake: string
                nextStake: string
                yield: string
                allowVote: number
                nextVoterCount: number
              }[]
            }
          }
        }
      }
    }
  }
  '/user/crowdfunding-devices': {
    get: {
      parameters: {
        query: {
          pageNo: string
          pageSize: string
          /** 不传查所有众筹设备，传查该用户参与的众筹设备 */
          address?: string
          /** type：1查所有standby设备，不传查未众筹满的 */
          type?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data: {
              hasPrev?: boolean
              pageNo?: number
              totalPage?: number
              pageSize?: number
              hasNext?: boolean
              totalCount?: number
              items?: {
                deviceStake: number
                deviceID: string
                deviceOwnerStake: string
                voterCount: number
                progress: number
                yield: number
              }[]
            }
          }
        }
      }
    }
  }
  '/user/vote-devices': {
    get: {
      parameters: {
        query: {
          address: string
          pageNo?: string
          pageSize?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data: {
              hasPrev?: boolean
              pageNo?: number
              totalPage?: number
              pageSize?: number
              hasNext?: boolean
              totalCount?: number
              items?: {
                deviceStateTimeOnChain: string
                deviceState: string
                deviceID: number
                deviceOwnerAddress: string
                deviceRegisterTimeOnChain: string
                deviceTotalStake: string
                deviceOwnerStake: string
                voterCount: string
                deviceMyStake: string
                lastHeartBeat: string
                perBill: string
                currentStake: string
                nextStake: string
                yield: string
                allowVote: number
              }[]
            }
          }
        }
      }
    }
  }
  '/power/single/claim': {
    post: {
      parameters: {}
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: number
            msg: string
            data: {
              /** 是否已领取成功 */
              claimed: boolean
            }
          }
        }
      }
    }
  }
  '/power/single': {
    get: {
      parameters: {
        query: {
          /** 用户地址 */
          address: string
          /** 类别(0 团队 1个人) */
          type: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              power: string
              pesonalStake: string
              teamStake: string
              reward: string
              businDateStr: string
              level: number
              /** 算力分布图 */
              powerRange: {
                /** 低值 */
                low: string
                /** 高值 */
                high: string
                /** 人数 */
                amount: string
              }[]
              /** 个人在分布图位置 */
              powerIndex: number
              /** 公式中基础算力 */
              baseStake: string
              /** 系数 */
              coefficient: string
              /** 总领取收益 */
              totalClaimed: string
            }
          }
        }
      }
    }
  }
  '/power/withdraw': {
    post: {
      parameters: {
        body: {
          root?: {
            /** 地址 */
            address: string
            /** 类别 */
            type: number
            /** 业务日期，列表返回值中提供 */
            businDate: number
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              /** 是否成功 */
              success: boolean
            }
          }
        }
      }
    }
  }
  '/power/list': {
    get: {
      parameters: {
        query: {
          /** 地址 */
          address: string
          /** 类别(0 团队 1个人) */
          type: string
          pageNumber: string
          pageSize: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              pageNo: number
              pageSize: string
              totalPage: number
              totalCount: number
              items: {
                /** 算力 */
                power: string
                /** 个人质押 */
                pesonalStake: string
                /** 团队质押 */
                teamStake: string
                /** 奖励 */
                reward: string
                /** 业务日期 */
                businDateStr: string
                /** 业务日期数字简写 */
                businDate: number
                /** 排名 */
                rank: number
                /** 是否已领取 */
                claimed: boolean
              }[]
            }
          }
        }
      }
    }
  }
  '/power/single/check': {
    get: {
      parameters: {
        query: {
          /** 如果未传，需要用户登录 */
          address?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: number
            msg: string
            data: {
              /** 质押合格 */
              stake: boolean
              /** campaign合格 */
              campaign: boolean
              /** 白名单合格 */
              white: boolean
              /** 算力 */
              power: string
              /** 是否已领取 */
              claimed: boolean
            }
          }
        }
      }
    }
  }
  '/rebate/compute': {
    /** 1\. 需要先查看bool\_stake\_reward\_user\_daily\_reward\_info\_cp表中是否有数据，没有的话需要先调用接口来同步 */
    post: {
      parameters: {
        body: {
          root?: {
            /** @description INVITER_L1: 1级邀请返佣分润,INVITER_L2: 2级邀请返佣分润 */
            day: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: string
            fail: boolean
          }
        }
      }
    }
  }
  '/user/daily-reward-info-cp': {
    post: {
      parameters: {
        body: {
          root?: {
            /** @description INVITER_L1: 1级邀请返佣分润,INVITER_L2: 2级邀请返佣分润 */
            day: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: string
            fail: boolean
          }
        }
      }
    }
  }
  '/user/airdrop-record': {
    get: {
      parameters: {
        query: {
          /** bot 用户 gas airdrop 记录ID */
          airdropRecordID: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description bot 用户 gas airdrop 记录上链时间 */
              airdropRecordTxTime: string
              /** @description bot 用户 gas airdrop 记录名称 */
              airdropRecordName: string
              /** @description bot 用户 gas airdrop 记录质押地址 */
              airdropRecordAddress: string
              /** @description bot 用户 gas airdrop 记录交易 hash */
              airdropRecordTxHash: string
              /** @description bot 用户 gas airdrop 记录质押金额 */
              airdropRecordAirdropAmount: string
              /** @description bot 用户 gas airdrop 记录ID */
              airdropRecordID: number
              /** @description bot 用户 gas airdrop 记录交易状态 */
              airdropRecordTxStatus: string
            }
          }
        }
      }
    }
    put: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description 交易状态 */
            txStatus: string
            /** @description 质押地址 */
            address: string
            /** @description 上链时间 */
            txTime: string
            /** @description 名称 */
            name: string
            /** @description bot 用户 gas airdrop 记录ID */
            airdropRecordID: number
            /** @description 交易 hash */
            txHash: string
            /** @description 质押金额 */
            airdropAmount: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
    post: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description 交易状态 */
            txStatus: string
            /** @description 质押地址 */
            address: string
            /** @description 上链时间 */
            txTime: string
            /** @description 名称 */
            name: string
            /** @description 交易 hash */
            txHash: string
            /** @description 质押金额 */
            airdropAmount: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
    delete: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description bot 用户 gas airdrop 记录ID */
            airdropRecordID: number
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
  }
  '/user/airdrop-records': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo?: string
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description bot 用户 gas airdrop 记录上链时间 */
                airdropRecordTxTime?: string
                /** @description bot 用户 gas airdrop 记录名称 */
                airdropRecordName?: string
                /** @description bot 用户 gas airdrop 记录质押地址 */
                airdropRecordAddress?: string
                /** @description bot 用户 gas airdrop 记录交易 hash */
                airdropRecordTxHash?: string
                /** @description bot 用户 gas airdrop 记录质押金额 */
                airdropRecordAirdropAmount?: string
                /** @description bot 用户 gas airdrop 记录ID */
                airdropRecordID?: number
                /** @description bot 用户 gas airdrop 记录交易状态 */
                airdropRecordTxStatus?: string
              }[]
            }
          }
        }
      }
    }
  }
}

export interface operations { }

export interface external { }

export type UserBotLoginPostParams = paths['/user/bot:login']['post']['parameters']['body']['root']
export type UserBotLoginPost = paths['/user/bot:login']['post']['responses'][200]['schema']['data']
export type UserUserGetParams = paths['/user/user']['get']['parameters']
export type UserUser = paths['/user/user']['get']['responses'][200]['schema']['data']
export type UserCheckGetParams = paths['/user/check']['get']['parameters']['query']
export type UserCheck = paths['/user/check']['get']['responses'][200]['schema']['data']
export type UserUserLevelGetParams = paths['/user/user-level']['get']['parameters']['query']
export type UserUserLevel = paths['/user/user-level']['get']['responses'][200]['schema']['data']
export type UserUserLoginPostParams = paths['/user/user:login']['post']['parameters']['body']['root']
export type UserUserLoginPost = paths['/user/user:login']['post']['responses'][200]['schema']['data']
export type UserMsgToLoginGetParams = paths['/user/msg-to-login']['get']['parameters']
export type UserMsgToLogin = paths['/user/msg-to-login']['get']['responses'][200]['schema']['data']
export type UserInvitationRelationsGetParams = paths['/user/invitation-relations']['get']['parameters']['query']
export type UserInvitationRelations = paths['/user/invitation-relations']['get']['responses'][200]['schema']['data']
export type UserInvitationRelationGetParams = paths['/user/invitation-relation']['get']['parameters']['query']
export type UserInvitationRelation = paths['/user/invitation-relation']['get']['responses'][200]['schema']['data']
export type BotInviterRebatesGetParams = paths['/bot/inviter-rebates']['get']['parameters']['query']
export type BotInviterRebates = paths['/bot/inviter-rebates']['get']['responses'][200]['schema']['data']
export type UserInviterRebatesGetParams = paths['/user/inviter-rebates']['get']['parameters']['query']
export type UserInviterRebates = paths['/user/inviter-rebates']['get']['responses'][200]['schema']['data']
export type UserInviteStakeRebatesGetParams = paths['/user/invite-stake-rebates']['get']['parameters']['query']
export type UserInviteStakeRebates = paths['/user/invite-stake-rebates']['get']['responses'][200]['schema']['data']
export type UserRebateWithdrawRecordsGetParams = paths['/user/rebate-withdraw-records']['get']['parameters']['query']
export type UserRebateWithdrawRecords = paths['/user/rebate-withdraw-records']['get']['responses'][200]['schema']['data']
export type UserRebateWithdrawRecordGetParams = paths['/user/rebate-withdraw-record']['get']['parameters']['query']
export type UserRebateWithdrawRecord = paths['/user/rebate-withdraw-record']['get']['responses'][200]['schema']['data']
export type UserRebateWithdrawPostParams = paths['/user/rebate:withdraw']['post']['parameters']['body']['root']
export type UserRebateWithdrawPost = paths['/user/rebate:withdraw']['post']['responses'][200]['schema']['data']
export type BlockchainTradeHistoryGetParams = paths['/blockchain/trade-history']['get']['parameters']['query']
export type BlockchainTradeHistory = paths['/blockchain/trade-history']['get']['responses'][200]['schema']['data']
export type BlockchainPairsGetParams = paths['/blockchain/pairs']['get']['parameters']
export type BlockchainPairs = paths['/blockchain/pairs']['get']['responses'][200]['schema']['data']
export type BlockchainUserOrdersGetParams = paths['/blockchain/user-orders']['get']['parameters']['query']
export type BlockchainUserOrders = paths['/blockchain/user-orders']['get']['responses'][200]['schema']['data']
export type BlockchainOrderBooksGetParams = paths['/blockchain/order-books']['get']['parameters']['query']
export type BlockchainOrderBooks = paths['/blockchain/order-books']['get']['responses'][200]['schema']['data']
export type BlockchainCheckOrderGetParams = paths['/blockchain/check-order']['get']['parameters']['query']
export type BlockchainCheckOrder = paths['/blockchain/check-order']['get']['responses'][200]['schema']['data']
export type BlockchainTradeStatisticGetParams = paths['/blockchain/trade-statistic']['get']['parameters']['query']
export type BlockchainTradeStatistic = paths['/blockchain/trade-statistic']['get']['responses'][200]['schema']['data']
export type BlockchainTradeHistoryDetailGetParams = paths['/blockchain/trade-history-detail']['get']['parameters']['query']
export type BlockchainTradeHistoryDetail = paths['/blockchain/trade-history-detail']['get']['responses'][200]['schema']['data']
export type UserDevicesGetParams = paths['/user/devices']['get']['parameters']['query']
export type UserDevices = paths['/user/devices']['get']['responses'][200]['schema']['data']
export type UserCrowdfundingDevicesGetParams = paths['/user/crowdfunding-devices']['get']['parameters']['query']
export type UserCrowdfundingDevices = paths['/user/crowdfunding-devices']['get']['responses'][200]['schema']['data']
export type UserVoteDevicesGetParams = paths['/user/vote-devices']['get']['parameters']['query']
export type UserVoteDevices = paths['/user/vote-devices']['get']['responses'][200]['schema']['data']
export type PowerSingleClaimPostParams = paths['/power/single/claim']['post']['parameters']['body']['root']
export type PowerSingleClaimPost = paths['/power/single/claim']['post']['responses'][200]['schema']['data']
export type PowerSingleGetParams = paths['/power/single']['get']['parameters']['query']
export type PowerSingle = paths['/power/single']['get']['responses'][200]['schema']['data']
export type PowerWithdrawPostParams = paths['/power/withdraw']['post']['parameters']['body']['root']
export type PowerWithdrawPost = paths['/power/withdraw']['post']['responses'][200]['schema']['data']
export type PowerListGetParams = paths['/power/list']['get']['parameters']['query']
export type PowerList = paths['/power/list']['get']['responses'][200]['schema']['data']
export type PowerSingleCheckGetParams = paths['/power/single/check']['get']['parameters']['query']
export type PowerSingleCheck = paths['/power/single/check']['get']['responses'][200]['schema']['data']
export type RebateComputePostParams = paths['/rebate/compute']['post']['parameters']['body']['root']
export type RebateComputePost = paths['/rebate/compute']['post']['responses'][200]['schema']['data']
export type UserDailyRewardInfoCpPostParams = paths['/user/daily-reward-info-cp']['post']['parameters']['body']['root']
export type UserDailyRewardInfoCpPost = paths['/user/daily-reward-info-cp']['post']['responses'][200]['schema']['data']
export type UserAirdropRecordGetParams = paths['/user/airdrop-record']['get']['parameters']['query']
export type UserAirdropRecord = paths['/user/airdrop-record']['get']['responses'][200]['schema']['data']
export type UserAirdropRecordPutParams = paths['/user/airdrop-record']['put']['parameters']['body']['root']
export type UserAirdropRecordPostParams = paths['/user/airdrop-record']['post']['parameters']['body']['root']
export type UserAirdropRecordPost = paths['/user/airdrop-record']['post']['responses'][200]['schema']['data']
export type UserAirdropRecordDeleteParams = paths['/user/airdrop-record']['delete']['parameters']['body']['root']
export type UserAirdropRecordsGetParams = paths['/user/airdrop-records']['get']['parameters']['query']
export type UserAirdropRecords = paths['/user/airdrop-records']['get']['responses'][200]['schema']['data']
